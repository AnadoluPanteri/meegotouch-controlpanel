Dcp Classes and mechanism

Dcp prefix stands for DuiControlPanel. These classes are derived from libdui
classes extending them with some signals and members to achieve our page 
changing mechanism.

Page handling:

The basic idea was a flexible, extendable system that uses low memory, creating and destroying the pages on-the-fly as the application needs them. 
This page changing mechanism was done by MainWindow only.
There are screen elements (components) on pages that need to swich page:
for example tapping category descriptions on Main Page opens a page with a list of applets of the given category. Tapping onto one of these applet items, the
applet itself is loaded and displayed on another page. You also need to provide a step-back mechanism when back button is pressed.
We wanted to provide this method above for arbitary sub-page depth.
These goals are achieved by signals and a class that knows
how to create the next displayed page from Pages::Handle singal parameter, that is PageFactory.

Process:
1 User taps on a screen component
2. Component emits a sigal, noticing that it wants to open a new page
3. DcpPage forwards this signal to MainWindow
4. MainWindow's slot, changePage creates the new page 
   with PageFactory::create(handle)


Components:

DcpComponent and DcpCategory 

- it is a DuiWidget descendand
- it implemens Composite Pattern (DcpCategory can have more DcpComponents)
it provides in public:
- void setSubPage(Pages::Handle subPage) to set the page handle which opens with tapping the component
- set/title() to have a title :)
- signal void openSubPage(Pages::Handle) to emit when component is clicked

DcpCategory is inherited from DcpComponent and implements add/remove functions 
to provide composite interface. Its descendant, DcpMainCategory provides layout for components including
rotation handling.

DcpPage

- Derived from DuiApplicationPage
- has a handle identifying the page
- has a referer wich is the handle of the page it was opened from
- has a signal void openSubPage(Pages::Handle) to forward DcpComponents' signals to MainWindow
- has a back() function going back to its referer by default must be reimplemented sometimes.
DcpCategoryPage is a DcpPage with DcpMainCategory (for layoutting) on it


PageFactory

PageFactory is a singleton that creates DcpPages due to the handle parameter.
The main method is
	DcpPage *PageFactory::create(Pages::Handle)
Pages::Handle contains page id and an arbitary string parameter.
Handle and id definitions in dist/src/pagefactory/pages.h
The parameter is needed to set applet category or the applet itself when 
it is selected and must be loaded. 

For example if we want to display a page containing the DateTime applet, we do:

	Pages::Handle handle = {Pages::APPLET, "DateTime"};
        // name "DateTime" is the same as in applet's desktop file. 
		// DcpAppletDb will find the applet by this name, see my former mail.
	DcpPage *page = PageFactory::instance()->create(handle);

MainWindow:

This class does the whole page changing thing with slot                                                                
void MainWindow::changePage(Pages::Handle handle) which:

- creates the new page with PageFactory due to handle.
- connects itself to new page's openSubPage(..) signal
- displays the page	
!!!
now it has
page->appear(DuiSceneWindow::KeepWhenDone); //TODO -> Destroy 
instead of
page->appear(DuiSceneWindow::DestroyWhenDone);
The last one doesn't seem to work. It segfaults.
This is a mem leak boiling all our effort to save memory so have to find 
solution. Maybe this is a libdui bug, but we are not sure about that.
!!!


