/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c DuiControlPanelIfProxy -p duicontrolpanelifproxy.h:duicontrolpanelifproxy.cpp com.nokia.DuiControlPanelIf.xml
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DUICONTROLPANELIFPROXY_H_1253200478
#define DUICONTROLPANELIFPROXY_H_1253200478

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.nokia.DuiControlPanelIf
 */
class DuiControlPanelIfProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.nokia.DuiControlPanelIf"; }

public:
    DuiControlPanelIfProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~DuiControlPanelIfProxy();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<bool> appletPage(const QString &appletName)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(appletName);
        return asyncCallWithArgumentList(QLatin1String("appletPage"), argumentList);
    }

    inline QDBusPendingReply<> categoryPage(const QString &category)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(category);
        return asyncCallWithArgumentList(QLatin1String("categoryPage"), argumentList);
    }

    inline QDBusPendingReply<> mainPage()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("mainPage"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace com {
  namespace nokia {
    typedef ::DuiControlPanelIfProxy DuiControlPanelIf;
  }
}
#endif
